{
  "name": "Simple-ruby-phonebook",
  "tagline": "",
  "body": "# Simple Ruby Phonebook\r\n\r\nA Simple phonebook HTTP/RESTful application.\r\n\r\nCreated with Ruby, [Sinatra](http://www.sinatrarb.com/) (For http routing) and [Daybreak](http://propublica.github.io/daybreak/) (For simple Key/Value storage).\r\n\r\nFunctionality:\r\n- List all entries in the phone book.\r\n- Create a new entry to the phone book.\r\n- Remove an existing entry in the phone book.\r\n- Update an existing entry in the phone book.\r\n- Search for entries in the phone book by surname.\r\n\r\n## Installation\r\n\r\nRequirements: Ruby.\r\n\r\n1. Ensure Ruby along with RubyGems is installed on your system\r\n2. Run `gem install sinatra`\r\n3. Run `gem install json`\r\n  - Note if this fails you may need to install ruby-dev: `sudo yum install ruby-devel` / `sudo apt-get install ruby-dev`\r\n4. Run `gem install daybreak`\r\n5. Run `ruby app.rb` to start the application\r\n\r\n## Usage\r\n\r\nNavigate to `http://localhost:4567/` after running the application.\r\n\r\nThe phonebook application is a simple RESTful web service.\r\n\r\nA contact within the phonebook has the following fields:\r\n- First Name `fname`\r\n- Last Name `lname`\r\n- Contact Number `num`\r\n- Address (Optional) `addr`\r\n\r\nIt accepts GET/PUT/POST and DELETE HTTP requests in JSON format.\r\n\r\n### GET `http://localhost:4567/contacts/`\r\n  Retrieves all contacts in JSON format.\r\n  ```\r\n  {  \r\n     \"0\":{  \r\n        \"fname\":\"John\",\r\n        \"lname\":\"Smith\",\r\n        \"num\":\"07728372667\",\r\n        \"addr\":\"11 Made up road\"\r\n     },\r\n     \"1\":{  \r\n        \"fname\":\"Jimmy\",\r\n        \"lname\":\"James\",\r\n        \"num\":\"01202927262\",\r\n        \"addr\":\"12 North Park Road\"\r\n     },\r\n     .....\r\n  }\r\n\r\n  ```\r\n### GET `http://localhost:4567/contacts/:id/`\r\n  Retrieves a single contact by its id number in JSON format.\r\n  ```\r\n  {  \r\n     \"1\":{  \r\n        \"fname\":\"Jimmy\",\r\n        \"lname\":\"James\",\r\n        \"num\":\"01202927262\",\r\n        \"addr\":\"12 North Park Road\"\r\n     }\r\n  }\r\n  ```\r\n### GET `http://localhost:4567/contacts/search/:surname/`\r\n  Searches contacts based on their surname. I.e. `http://localhost:4567/contacts/search/smith/` will return:\r\n  ```\r\n  {  \r\n     \"4\":{  \r\n        \"fname\":\"Jennifer\",\r\n        \"lname\":\"Smith\",\r\n        \"num\":\"102903874756\",\r\n        \"addr\":\"45 Smith Road\"\r\n     }\r\n  }\r\n  ```\r\n### PUT `http://localhost:4567/contacts/:id/`\r\n  Updates a current contact by its id number. Below is an example on the required JSON.\r\n  ```\r\n  {\r\n      \"fname\":\"Jimmy\",\r\n      \"lname\":\"James\",\r\n      \"num\":\"01202558996\",\r\n      \"addr\":\"12 North Park Road\"\r\n  }\r\n  ```\r\n  Note, the 'addr' field is optional.\r\n### POST `http://localhost:4567/contacts/`\r\n  Similar to PUT but creates a new contact rather than updating.\r\n  ```\r\n  {\r\n      \"fname\":\"Laura\",\r\n      \"lname\":\"Smith\",\r\n      \"num\":\"02356987456\",\r\n      \"addr\": \"45 Smith Road\"\r\n  }\r\n  ```\r\n\r\n### DELETE `http://localhost:4567/contacts/:id/`\r\n  Deletes a contact by its id number\r\n\r\n## History\r\n\r\n - 4th April 2016: Initial deployment.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}